package com.entity;

import com.customException.InsufficientFundsException;

public class BankAccount {
    private String accountHolder;
    private int accountNumber;
    private double balance;

    public BankAccount(String accountHolder, int accountNumber, double balance) {
        this.accountHolder = accountHolder;
        this.accountNumber = accountNumber;
        this.balance = balance;
    }

    public synchronized void withdraw(double amount) throws InsufficientFundsException {
        System.out.println("Attempting to withdraw ₹" + amount + "...");
        System.out.println("Processing...");
        
        try {
            Thread.sleep(2000);
            if (amount > balance) {
                throw new InsufficientFundsException("Not enough balance to withdraw ₹" + amount);
            }
        } catch (InterruptedException e) {
            Thread.currentThread().interrupt();
        }

        

        balance -= amount;
        System.out.println("Withdrawal successful. Remaining balance: ₹" + balance);
    }

    public double getBalance() {
        return balance;
    }
}
