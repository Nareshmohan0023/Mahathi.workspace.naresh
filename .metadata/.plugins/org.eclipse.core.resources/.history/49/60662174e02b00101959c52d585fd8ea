package com.ecommerce.service;

import java.util.Map;

import com.ecommerce.db.DataBase;
import com.ecommerce.entity.Category;
import com.ecommerce.utils.InputUtil;

public class CategoryServiceImpl implements CategoryService {
	
	public Category selectCategoryByCode(String id) {
		for(Map.Entry<Integer, Category> category:DataBase.getCategoriesList().entrySet()) {
			if(id.equals(category.getValue().getCategoryId())) {
				return category.getValue();
			}
		}
		return null;

	}
	public Category selectCategoryById(String id) {
		for(Map.Entry<Integer, Category> category:DataBase.getCategoriesList().entrySet()) {
			if(id.equals(category.getValue().getCategoryId())) {
				return category.getValue();
			}
		}
		return null;

	}

	@Override
	public void addCategory(Category c) {
		int id=Integer.parseInt(c.getCategoryId().replaceAll("\\D", ""));
		DataBase.getCategoriesList().put(id, c);
		System.out.println("Category added Successfully!");
		
	}

	@Override
	public void deleteCategory(String id) {
		for(Map.Entry<Integer, Category> category:DataBase.getCategoriesList().entrySet()) {
			if(category.getValue().getCategoryId().equals(id)) {
				DataBase.getCategoriesList().remove(category.getKey());
			}
		}
	}

	@Override
	public void displayCategory() {
		for(Map.Entry<Integer, Category> category:DataBase.getCategoriesList().entrySet()) {
			System.out.println("Id:"+category.getKey()+"| C-Name:"+category.getValue().getName()+"| C-Code:"+category.getValue().getCategoryId());
		}
		
	}

	@Override
	public int noItemsInCategory() {
		int items=DataBase.getCategoriesList().size();
		return items;
	}

	@Override
	public void displayCategoryProduct() {
		for(Map.Entry<Integer, Category> category:DataBase.getCategoriesList().entrySet()) {
			System.out.println("Id:"+category.getKey()+"| C-Name:"+category.getValue().getName()+"| C-Code:"+category.getValue().getCategoryId());
		}
		int id=InputUtil.getIntegerInput("Select Id as Displayed Above");
		
		
	}
}
